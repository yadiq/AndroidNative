plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    namespace 'com.hqumath.nativedemo' //影响R类生成
    ndkVersion '23.1.7779620'//AGP7.4版本对应
    compileSdk 33

    defaultConfig {
        applicationId "com.hqumath.nativedemo" //影响AndroidManifest中package
        minSdk 21//so加固时限制21
        //noinspection ExpiredTargetSdkVersion
        targetSdk 33
        versionCode 20241225
        versionName "1.0"
        //multiDexEnabled true
        ndk {
            abiFilters "arm64-v8a"//主流手机
            abiFilters "armeabi-v7a"//电视盒子
            //abiFilters "x86"
            //abiFilters "x86_64"
        }
        externalNativeBuild {
            cmake {
                //C++编译器标志
                // -std,C++标准版本
                // -frtti,启用运行时类型信息,需要RTTI时启用
                // -fexceptions,启用异常处理,需要异常处理时启用
                // -g,生成调试信息,Debug模式启用
                // -O2,优化级别,Release模式使用
                // -Wall,启用所有警告,推荐启用
                // -Werror,将警告视为错误,严格模式启用
                cppFlags "-std=c++14 -frtti -fexceptions"
                //CMake参数
                // -DANDROID_STL,选择STL 实现.c++_shared, c++_static, system, none
                // -DCMAKE_BUILD_TYPE,构建类型.Debug, Release, RelWithDebInfo
                // -DANDROID_PLATFORM,目标平台级别.android-21, android-24, 等
                // -DANDROID_ARM_NEON,启用NEON优化. ON, OFF
                arguments "-DANDROID_STL=c++_shared"
                //可选：指定目标 ABI
                //abiFilters 'armeabi'
            }
        }
    }
    buildFeatures {
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions{
        jvmTarget = JavaVersion.VERSION_17
    }
    //配置自定义打包名称
    applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName
            if (variant.buildType.name.equals('release')) {
                fileName = "AndroidNative_${variant.mergedFlavor.versionName}_${variant.mergedFlavor.versionCode}.apk"
            } else if (variant.buildType.name.equals('debug')) {
                fileName = "AndroidNative_${variant.mergedFlavor.versionName}_debug_${variant.mergedFlavor.versionCode}.apk"
            }
            outputFileName = fileName
        }
    }
    //开启动态库编译
    /*ndk_build已弃用
    externalNativeBuild {
        ndkBuild {
            path file('src/main/jni_test/Android.mk')
        }
    }*/
    //cmake跨平台
    externalNativeBuild {
        cmake {
            path file('src/main/cpp_demo/CMakeLists.txt')
            version "3.18.1"  //CMake版本
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.2'

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1" //核心协程依赖
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2' //lifecycleScope 对于 Activity/Fragment
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2' //viewModelScope 对于 ViewModel
}
